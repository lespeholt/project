{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"data",
				"dataSet2"
			],
			[
				"trai",
				"trainingSet"
			],
			[
				"neu",
				"neural_network_os"
			],
			[
				"ne",
				"neural_network_os"
			],
			[
				"traini",
				"training_set"
			],
			[
				"validai",
				"validation_set"
			],
			[
				"pa",
				"patches_per_category"
			],
			[
				"cate",
				"categories"
			],
			[
				"seque",
				"sequence_dist"
			],
			[
				"seq",
				"num_sequences"
			],
			[
				"categ",
				"category"
			],
			[
				"tra",
				"trainingSet"
			],
			[
				"patch",
				"patches_per_category"
			],
			[
				"patc",
				"patches_per_category"
			],
			[
				"GTEST",
				"GTEST_FOUND"
			],
			[
				"set",
				"setZero"
			],
			[
				"ami",
				"amino_acid_lookup"
			],
			[
				"cre",
				"create_amino_acid_lookup"
			],
			[
				"amino",
				"amino_acid"
			],
			[
				"pat",
				"patches"
			],
			[
				"Se",
				"Sequence"
			],
			[
				"ca",
				"category_lookup"
			],
			[
				"test",
				"test_case"
			],
			[
				"cta",
				"category_lookup"
			],
			[
				"catego",
				"category_lookup"
			],
			[
				"fasta",
				"fasta_pair"
			],
			[
				"cat",
				"category"
			],
			[
				"pri",
				"priority_queue"
			],
			[
				"Cate",
				"CategoryPair"
			],
			[
				"Ca",
				"CategoryPair"
			],
			[
				"num",
				"num_sequences"
			],
			[
				"CMAKE",
				"CMAKE_SOURCE_DIR"
			],
			[
				"inc",
				"include_directories"
			],
			[
				"ma",
				"make_pair"
			],
			[
				"ASS",
				"ASSERT_EQ"
			],
			[
				"se",
				"sequences_"
			],
			[
				"ASSERt",
				"ASSERT_DEATH"
			],
			[
				"Set",
				"SetProductN"
			],
			[
				"AS",
				"ASSERT_EQ"
			],
			[
				"pos",
				"possible_values"
			],
			[
				"outp",
				"output_file"
			],
			[
				"du",
				"dummyData1"
			],
			[
				"paddin",
				"padding-top"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"mart",
				"margin-bottom"
			],
			[
				"fol",
				"follow_symlinks"
			],
			[
				"For",
				"kForward"
			],
			[
				"Cac",
				"CachedStream"
			],
			[
				"cach",
				"cache_size_"
			],
			[
				"buff",
				"buffer_start_"
			],
			[
				"u",
				"utilized_buffer_size_"
			],
			[
				"touc",
				"touch_count"
			],
			[
				"posi",
				"position_"
			],
			[
				"wri",
				"writes_needed"
			],
			[
				"writ",
				"writes_needed"
			],
			[
				"buffe",
				"buffer_size"
			],
			[
				"p",
				"position"
			],
			[
				"write",
				"write_map_"
			],
			[
				"wrie",
				"write_map_"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"int",
				"int64_t"
			],
			[
				"else",
				"else_count"
			],
			[
				"buf",
				"buffer_start_"
			],
			[
				"buffer",
				"buffer_start_"
			],
			[
				"S",
				"SCNd64"
			],
			[
				"flus",
				"flush_disk"
			],
			[
				"con",
				"consistency_check"
			],
			[
				"block",
				"block_size"
			],
			[
				"recur",
				"recursive"
			],
			[
				"recu",
				"recursive_sift_memory_wasting"
			],
			[
				"blo",
				"block_size"
			],
			[
				"bloc",
				"block_size_end"
			],
			[
				"strea",
				"stream_buffer_size_"
			],
			[
				"stream_buffer",
				"stream_buffer_size_"
			],
			[
				"stream",
				"stream_buffer_size"
			],
			[
				"po",
				"position_"
			],
			[
				"pee",
				"peek_max"
			],
			[
				"element_in_",
				"elements_in_child_less_than_min_in_parent"
			],
			[
				"cac",
				"cached_stream_test"
			],
			[
				"SEEK",
				"SEEK_SET"
			],
			[
				"stre",
				"stream2"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/C++/C++.sublime-build",
	"command_palette":
	{
		"height": 167.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/lasseespeholt/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/lasseespeholt/Library/Application Support/Sublime Text 3/Packages/User/C++.sublime-settings",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/src/class.hpp",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/src/main.cpp",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/src/class_test.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/fasta_test.cpp",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/src/gtest.cpp",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/project.sublime-project",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/src/class",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/cpplint.py",
		"/Users/lasseespeholt/Dropbox/DeepMind/project/lint.sh",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/thesis.tex",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/temp/sequence_counts",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/thesis.toc",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/thesis.log",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/thesis.aux",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/Makefile",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/report/refs.bib",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build/Release/NeuralNetwork",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build/Debug/NeuralNetwork",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/string_utils_test.cpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/histogram.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/string_utils.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/fasta.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/P-Type_ATPase.fasta",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build2/Makefile",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build/Debug/FastaTest",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build_sublime/NeuralNetwork",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build2/NeuralNetwork",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/cmake/Modules/FindGMock.cmake",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/src/main.cpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/project/build_sublime/NeuralNetwork.sublime-project",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/measurements/walker_unstruct.data",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/Report/thesis.tex",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/Report/Makefile",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/fasta_test.cpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build2/FastaTest",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build2/Makefile",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/CMakeFiles/TargetDirectories.txt",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/P-Type_ATPase.fasta",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/fasta.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/Objects-normal/x86_64/FastaTest_dependency_info.dat",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/Objects-normal/x86_64/FastaTest.LinkFileList",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/Objects-normal/x86_64/fasta_test.dia",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/Objects-normal/x86_64/fasta_test.d",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.xcodeproj/xcuserdata/lasseespeholt.xcuserdatad/xcschemes/FastaTest.xcscheme",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/FastaTest~.dep",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/NeuralNetwork.build/Debug/FastaTest.build/FastaTest.dep",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build2/fasta_empty.test",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/build/Debug/FastaTest",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/gtest.cpp",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/ref.bib",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/measurements/find_neighbours.plot",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.tex",
		"/Users/lasseespeholt/Downloads/walk",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Project/tests/macScript.sh",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Project/tests/counts.sh",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.synctex.gz",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.out",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.log",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.fdb_latexmk",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Report/rapport.aux",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/string_utils_test.cpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/string_utils.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/window.hpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/src/window_test.cpp",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_multiple2.in",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_multiple.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_multiple.in",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_simple.in",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_simple2.in",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_simple2.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_simple.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_multiple2.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_empty.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_simpel.out",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_empty.in",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/Github/NN/tests/fasta_empty.test",
		"/Users/lasseespeholt/Dropbox/Github/meta-search/front.html",
		"/Users/lasseespeholt/Dropbox/Github/meta-search/pdf.html",
		"/Users/lasseespeholt/Google Drive/Wordpress/html5up-verti/css/style-mobile.css",
		"/Users/lasseespeholt/Google Drive/Wordpress/html5up-verti/css/images/mobileUI-site-nav-opener-bg.svg",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/search.php",
		"/Users/lasseespeholt/Google Drive/Wordpress/html5up-verti/js/config.js",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/content-none.php",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/comments.php",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/inc/custom-header.php",
		"/Users/lasseespeholt/Google Drive/Wordpress/html5up-verti/index.html",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/js/customizer.js",
		"/Users/lasseespeholt/Google Drive/Wordpress/verti/inc/customizer.php",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Project/tests/background.sh",
		"/Users/lasseespeholt/Downloads/BackPropagationProgram.cs",
		"/Users/lasseespeholt/Dropbox/Github/P2PNetworking/Project/tests/output.txt",
		"/Users/lasseespeholt/Desktop/foo.html",
		"/Users/lasseespeholt/Dropbox/Uni/Speciale/links",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round4/m_d",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round4/best_sort",
		"/Users/lasseespeholt/Dropbox/Uni/StatistiskeModeller1/OblOpg2/notes",
		"/Users/lasseespeholt/Dropbox/Uni/IntFuncProg/Exam/noter.txt",
		"/Users/lasseespeholt/Dropbox/Uni/IntFuncProg/Exam/big_oh_notation.v",
		"/Users/lasseespeholt/Desktop/Book1.csv",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport3/rapport.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport3/3.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport3/noter",
		"/Users/lasseespeholt/Downloads/fac.session",
		"/Users/lasseespeholt/Dropbox/Uni/StatistiskeModeller1/OblOpg2/2d_3.output",
		"/Users/lasseespeholt/Dropbox/Uni/StatistiskeModeller1/OblOpg2/2d_3.sas",
		"/Users/lasseespeholt/Dropbox/Uni/StatistiskeModeller1/OblOpg2/2d.sas",
		"/Users/lasseespeholt/Dropbox/Uni/StatistiskeModeller1/OblOpg2/sas.txt",
		"/Users/lasseespeholt/Downloads/unfoldr-test.azurewebsites.net.PublishSettings",
		"/Users/lasseespeholt/Dropbox/Firma dokumenter/Projekter/Ladda/LaddaUI.nupkg",
		"/Users/lasseespeholt/Google Drive/Github/unfoldr-test/Unfoldr/Content/Site.css",
		"/Users/lasseespeholt/Dropbox/Firma dokumenter/AppEngine/HelloWorld/.codeintel/config",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round4/m_large",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport2/rapport.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/best_sort.plot",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport2/benchmarks.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round4/b_final",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project1/measurements/qsort",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport2/introduction.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport2/test_setup.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Rapport2/implementation.tex",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project1/measurements/best_external_sort",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/m_cache_size_comparison",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project1/measurements/best_sort.plot",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round3/m",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/round4/m_inefficient",
		"/Users/lasseespeholt/Dropbox/Github/IO13/Project2/measurements/m_efficiency.plot"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"normaliz",
			"normalizes",
			"tag",
			"denoisi",
			"feature",
			"deeplear",
			"\\gls{ac",
			"dan",
			"dan s",
			"@online",
			"On Conn",
			"On Con",
			"turing",
			"recurrent",
			"feed-for",
			"glo",
			"tikz",
			"Input",
			"activation f",
			"bias",
			"normal",
			"softmax",
			"2012",
			"cite",
			"sequence",
			"fasta ",
			"rand",
			"random_dev",
			"pair<string, string>",
			"RandomNumberGenerator",
			"load",
			"load:",
			"9751\nload:",
			"\n\n",
			".",
			"Calling",
			"Testing",
			".",
			"\n\n",
			"Calling",
			"Testing",
			"\\|-\\|",
			"\\|Other\\|",
			"\\|.?.?\\|",
			"\\|..?\\|",
			"p42",
			"find",
			"TRUE",
			"		",
			"monkey",
			"\\n",
			"\\n\\n",
			"kwalkers:",
			" structured:true know neighbours:",
			"Testing peer:... with TTL:",
			"Found in ...",
			"#Last output line from P...",
			"Calling count found",
			"Calling count find",
			" structured:true know neighbours:",
			"TTL:",
			"Testing",
			"=\"\"",
			"blood",
			"error(",
			"$x$",
			"it is",
			"span",
			"overlap",
			"span",
			"loaded",
			"log",
			"sync",
			"both of the solut",
			"both solutio",
			"Figure",
			"current",
			"I/O",
			"O",
			"IO",
			"old",
			"get_from_stream_backwards",
			"backward_read_dec",
			"read_prev",
			"read_de",
			"get_from_stream_backwards",
			"swap",
			"move",
			"open",
			"open(",
			";\n",
			"close_stream",
			"read_de",
			"look",
			"ExternalHeap",
			"assert(f",
			"project1",
			"rand",
			"steal_fr",
			"recursive",
			"());",
			"stream_bu",
			"int64_t",
			" ./",
			"todo",
			"3",
			"++;\n",
			"4",
			";\n",
			"\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"backwards",
			"I/O",
			"Searching"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 333.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "project.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"clas",
				"src/class_test.hpp"
			],
			[
				"gt",
				"src/gtest.cpp"
			],
			[
				"",
				"lint.sh"
			],
			[
				"the",
				"thesis.tex"
			],
			[
				"ref",
				"refs.bib"
			],
			[
				"fa",
				"src/fasta.hpp"
			],
			[
				"his",
				"src/histogram.hpp"
			],
			[
				"ne",
				"output/neural_network2.txt"
			],
			[
				"fas",
				"src/fasta.hpp"
			],
			[
				"fasta_t",
				"src/fasta_test.cpp"
			],
			[
				"p",
				"P-Type_ATPase.fasta"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"str",
				"src/string_utils_test.cpp"
			],
			[
				"string",
				"src/string_utils.hpp"
			],
			[
				"fast",
				"src/fasta.hpp"
			],
			[
				"neu",
				"output/neural_network.txt"
			],
			[
				"hist",
				"src/histogram.hpp"
			],
			[
				"mai",
				"src/main.cpp"
			],
			[
				"fasta",
				"src/fasta_test.cpp"
			],
			[
				"li",
				"lint.sh"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"cm",
				"CMakeLists.txt"
			],
			[
				"p-",
				"NN/P-Type_ATPase.fasta"
			],
			[
				"test",
				"src/string_utils_test.cpp"
			],
			[
				"cma",
				"NN/CMakeLists.txt"
			],
			[
				"cmak",
				"NN/CMakeLists.txt"
			],
			[
				".dot",
				"measurements/graph.dot"
			],
			[
				"ra",
				"rapport.tex"
			],
			[
				"find",
				"measurements/find_neighbours.plot"
			],
			[
				"stri",
				"src/string_utils_test.cpp"
			],
			[
				"sim",
				"tests/fasta_simple.in"
			],
			[
				"fun",
				"verti/functions.php"
			],
			[
				"sty",
				"verti/style.css"
			],
			[
				"foo",
				"verti/footer.php"
			],
			[
				"conf",
				"verti/js/config.js"
			],
			[
				"inde",
				"html5up-verti/index.html"
			],
			[
				"cust",
				"verti/inc/custom-header.php"
			],
			[
				"head",
				"verti/header.php"
			],
			[
				"index",
				"verti/index.php"
			],
			[
				"3",
				"3.tex"
			],
			[
				"2d",
				"2d1.sas"
			],
			[
				"1",
				"1_2a_2b_2c.sas"
			],
			[
				"data",
				"data.sas"
			],
			[
				"con",
				"HelloWorld/.codeintel/config"
			],
			[
				"he",
				"helloworld.py"
			],
			[
				"be",
				"benchmarks.tex"
			],
			[
				"rapp",
				"rapport.tex"
			],
			[
				"imp",
				"Rapport2/implementation.tex"
			],
			[
				"ben",
				"Rapport2/benchmarks.tex"
			],
			[
				"intr",
				"Rapport2/introduction.tex"
			],
			[
				"m",
				"round4/m_large"
			],
			[
				"impl",
				"Rapport2/implementation.tex"
			],
			[
				"rap",
				"Rapport2/rapport.tex"
			],
			[
				"b",
				"b_final"
			],
			[
				"tes",
				"test_setup.tex"
			],
			[
				"buf",
				"buffered_stream.hpp"
			],
			[
				"bloc",
				"block.hpp"
			],
			[
				"me",
				"mmap_file_stream.hpp"
			],
			[
				"cach",
				"cached_stream.hpp"
			],
			[
				"cac",
				"cached_stream.hpp"
			],
			[
				"ex",
				"external_heap.hpp"
			],
			[
				"blo",
				"block.hpp"
			],
			[
				"ca",
				"cached_stream.hpp"
			],
			[
				"bu",
				"buffered_stream.hpp"
			],
			[
				"h",
				"external_heap.hpp"
			],
			[
				"buff",
				"buffered_stream.hpp"
			],
			[
				"exte",
				"external_heap.hpp"
			],
			[
				"bl",
				"block.hpp"
			],
			[
				"sys",
				"sys_stream.hpp"
			],
			[
				"te",
				"test.cpp"
			],
			[
				"e",
				"external_heap.hpp"
			],
			[
				"et",
				"external_heap.hpp"
			],
			[
				"f",
				"f_stream.hpp"
			],
			[
				"mmap",
				"mmap_file_stream.hpp"
			],
			[
				"mm",
				"mmap_file_stream.hpp"
			],
			[
				"ext",
				"external_heap.hpp"
			],
			[
				"hea",
				"external_heap.hpp"
			],
			[
				"heap",
				"external_heap.hpp"
			],
			[
				"sy",
				"sys_stream.hpp"
			],
			[
				"du",
				"dummy_stream.hpp"
			],
			[
				"fst",
				"f_stream.hpp"
			],
			[
				"dum",
				"dummy_stream.hpp"
			],
			[
				"fs",
				"f_stream.hpp"
			],
			[
				"ma",
				"main.cpp"
			],
			[
				"mi",
				"main.cpp"
			],
			[
				"sa",
				"sys_stream.hpp"
			],
			[
				"f_",
				"f_stream.hpp"
			],
			[
				"buffer",
				"buffered_stream.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
